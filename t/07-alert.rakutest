#!raku

use Test;

use Terminal::UI 'ui';
use Terminal::ANSI;
use Terminal::UI::Utils;
use Terminal::UI::Input;
use Log::Async;

logger.add-tap: -> %m { diag %m<msg> } if %*ENV<VERBOSE>;

disable-output;

%*ENV<HARNESS_ACTIVE> = 1;
%*ENV<TERMINAL_UI_COLS> = 20;
%*ENV<TERMINAL_UI_ROWS> = 10;

&abort.wrap: -> |c { diag c; exit 1; }

my $p = Promise.new;
my $c = Channel.new;

ui.setup(:1pane);
ui.pane.put("Hello!");
ui.pane.put("world");

is virtual-screen.render, q:to/TXT/, 'initial screen';
╔══════════════════╗
║Hello!            ║
║world             ║
║                  ║
║                  ║
║                  ║
║                  ║
║                  ║
║                  ║
╚══════════════════╝
TXT

my $q = start ui.alert("¡ALERT!");

sleep 1;

is virtual-screen.render.raku, q:to/TXT/.raku, 'alert';
╔══════════════════╗
║Hello!            ║
║w╔══════════════╗ ║
║ ║   ¡ALERT!    ║ ║
║ ╟──────────────╢ ║
║ ╢      ok      ║ ║
║ ╚══════════════╝ ║
║                  ║
║                  ║
╚══════════════════╝
TXT

ui.focused.call('select');

await $q;

is virtual-screen.render, q:to/TXT/, 'dismissed';
╔══════════════════╗
║Hello!            ║
║world             ║
║                  ║
║                  ║
║                  ║
║                  ║
║                  ║
║                  ║
╚══════════════════╝
TXT

done-testing;

